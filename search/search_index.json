{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>cTrip - Documentation</p>"},{"location":"#ctrip-crypto-payment-gateway-documentation","title":"cTrip Crypto Payment Gateway Documentation","text":"<ul> <li>Overview</li> <li>Setup</li> <li>Configuration</li> <li>Usage</li> <li>Endpoints</li> <li>Requirements</li> </ul>"},{"location":"#overview","title":"Overview","text":"<p>This is a simple Flask web application for processing payments using the Ethereum blockchain. Users can generate unique payment addresses, monitor payment statuses, and send payment information to an admin address.</p>"},{"location":"#setup","title":"Setup","text":"<pre><code>git clone https://github.com/rakibmia7254/ctrip\n\ncd ctrip\n\npip install -r requirements.txt\n</code></pre> <p>Active Virtual Environment And Start Flask Server however You want.</p>"},{"location":"#configuration","title":"Configuration","text":"<p>Open <code>.env</code> Change Veriables What You Want And Save</p> <pre><code>ADMIN_ADDRESS=0x8f13688c9B53E93dE5A1D0c86b9816e7cc578017\nW3_PROVIDER=https://data-seed-prebsc-1-s3.binance.org:8545/\nSECRET_KEY=your_secret_key\ngasLimit=200000\ngasPrice=5\n</code></pre> <p>I Used BNB Testnet. Adjust gas prices, gas limits, and other parameters based on your Blockchain network and requirements.</p>"},{"location":"#usage","title":"Usage:","text":""},{"location":"#generate-payment-address","title":"Generate Payment Address:","text":"<p>Use the <code>/generate_payment_address</code> endpoint to generate a new payment address.</p> <p>Make a POST request with a JSON payload containing the desired payment amount.</p> <p>Example using <code>curl</code>:</p> <p>curl -X POST -H \"X-Api-Key: YOUR_API_KEY\" -H \"Content-Type: application/json\" -d '{\"amount\": 100}' http://localhost:8080/generate_payment_address</p> <p>The response will contain the new payment address and its validity period.</p>"},{"location":"#check-payment-status","title":"Check Payment Status:","text":"<p>Use the <code>/check_payment/{payment_address}</code> endpoint to check the status of a payment.</p> <p>Replace <code>{payment_address}</code> with the actual Ethereum payment address.</p> <p>Example using <code>curl</code>:</p> <p>curl http://localhost:8080/check_payment/YOUR_PAYMENT_ADDRESS</p> <p>The response will indicate the payment status and, if received, the current balance.</p>"},{"location":"#send-payment-information-to-admin","title":"Send Payment Information to Admin:","text":"<p>The application automatically sends payment information to the admin address when a valid payment is received. Adjust the admin address (ADMIN_ADDRESS) and gas parameters as needed.</p>"},{"location":"#endpoints","title":"Endpoints","text":""},{"location":"#1-generate-payment-address","title":"1. Generate Payment Address","text":"<p>URL: <code>/generate_payment_address</code> </p> <p>Methods: POST  </p> <p>Description: Generates a unique Ethereum payment address for a specified payment amount. Requires a valid API key in the headers.</p> <p>Check Payment:</p>"},{"location":"#check-payment","title":"Check Payment:","text":"<p>URL: <code>/check_payment/{payment_address}</code> </p> <p>Methods: GET  </p> <p>Description: Checks if a payment has been received for the given payment address  </p>"},{"location":"#requirements","title":"Requirements:","text":"<p><code>1. Python 3.x 2. Flask 3. Web3 4. APScheduler</code></p> <p>\u00a9 2024 Payment Processing App. All rights reserved.</p> <p>Author: Rakib Hossain</p> <p>Contact us: rakib4ggp@gmail.com</p>"}]}